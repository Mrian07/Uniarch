{"version":3,"sources":["webpack:///src/app/konfirmasi/konfirmasi.page.html","webpack:///src/app/konfirmasi/konfirmasi-routing.module.ts","webpack:///src/app/konfirmasi/konfirmasi.module.ts","webpack:///src/app/konfirmasi/konfirmasi.page.scss","webpack:///src/app/konfirmasi/konfirmasi.page.ts","webpack:///src/app/providers/user-data.ts"],"names":["routes","path","component","KonfirmasiPageRoutingModule","imports","forChild","exports","KonfirmasiPageModule","declarations","KonfirmasiPage","http","router","userData","loadingctrl","consta","userdata","route","modalCtrl","camera","data_user","submitted","signup","id_order","nama_pemilik","dari_bank","ke_bank","jumlah_dana","tanggal_pembayaran","bukti","console","log","getUsername","then","hsl","navigateByUrl","snapshot","paramMap","get","options","quality","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","sourceType","PictureSourceType","PHOTOLIBRARY","create","message","loading","getPicture","imageData","base64Image","form","valid","present","post","subscribe","hasil","code","show_alert","msg","dismiss","selector","template","UserData","storage","platform","_favorites","session","HAS_LOGGED_IN","HAS_SEEN_TUTORIAL","authState","ready","isLoggedIn","value","sessionName","indexOf","push","index","splice","username","set","setUsername","window","dispatchEvent","CustomEvent","remove","next","referral","photo_profile","photo","promise","Promise","resolve","reject","provinsi","kota","url","nama_pel","email_pel","pass_pel","kon_pass","no_telp_pel","kecamatan","alamat_pel","jk_pel","id_ref","id_pel","info_lain_pel","nama_bank","rek","an","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAThC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,sFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,+DAAD;AAPN,OAAT,CASgC,GAApBD,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFE,cAAc;AAczB,gCACSC,IADT,EAESC,MAFT,EAGSC,QAHT,EAISC,WAJT,EAKUC,MALV,EAMUC,QANV,EAOUC,KAPV,EAQSC,SART,EASUC,MATV,EASwB;AAAA;;AARf,eAAAR,IAAA,GAAAA,IAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,SAAA,GAAAA,SAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AAtBV,eAAAC,SAAA,GAAiB,EAAjB;AAEA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,MAAA,GAAe;AACbC,oBAAQ,EAAG,EADE;AAEbC,wBAAY,EAAG,EAFF;AAGbC,qBAAS,EAAG,EAHC;AAIbC,mBAAO,EAAG,mBAJG;AAKbC,uBAAW,EAAG,EALD;AAMbC,8BAAkB,EAAG,EANR;AAObC,iBAAK,EAAG;AAPK,WAAf;AAmBK;;AAxBoB;AAAA;AAAA,qCA0Bd,CACV;AA3BwB;AAAA;AAAA,6CA4BN;AAAA;;AACjBC,mBAAO,CAACC,GAAR,CAAY,aAAZ;AACA,iBAAKT,MAAL,GAAc;AACZC,sBAAQ,EAAG,EADC;AAEZC,0BAAY,EAAG,EAFH;AAGZC,uBAAS,EAAG,EAHA;AAIZC,qBAAO,EAAG,mBAJE;AAKZC,yBAAW,EAAG,EALF;AAMZC,gCAAkB,EAAG,EANT;AAOZC,mBAAK,EAAG;AAPI,aAAd;AASA,iBAAKb,QAAL,CAAcgB,WAAd,GAA4BC,IAA5B,CAAkC,UAAAC,GAAG,EAAI;AACvCJ,qBAAO,CAACC,GAAR,CAAYG,GAAZ,EAAiB,OAAjB;;AACA,kBAAGA,GAAG,IAAE,IAAR,EAAa;AACX,qBAAI,CAACtB,MAAL,CAAYuB,aAAZ,CAA0B,OAA1B;AACD,eAFD,MAEK;AACH,qBAAI,CAACf,SAAL,GAAec,GAAf;AACA,qBAAI,CAACX,QAAL,GAAgB,KAAI,CAACN,KAAL,CAAWmB,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,qBAAI,CAAChB,MAAL,CAAYC,QAAZ,GAAuB,KAAI,CAACA,QAA5B;AACD;AACF,aATD;AAUD;AAjDwB;AAAA;AAAA,yCAkDP;;;;;;;;;AAChB;AACMgB,6B,GAAyB;AAC7BC,+BAAO,EAAE,GADoB;AAE7BC,uCAAe,EAAE,KAAKtB,MAAL,CAAYuB,eAAZ,CAA4BC,QAFhB;AAG7BC,oCAAY,EAAE,KAAKzB,MAAL,CAAY0B,YAAZ,CAAyBC,IAHV;AAI7BC,iCAAS,EAAE,KAAK5B,MAAL,CAAY6B,SAAZ,CAAsBC,OAJJ;AAK7BC,kCAAU,EAAG,KAAK/B,MAAL,CAAYgC,iBAAZ,CAA8BC;AALd,uB;;AAOhB,6BAAM,KAAKtC,WAAL,CAAiBuC,MAAjB,CAAwB;AAC3CC,+BAAO,EAAE;AADkC,uBAAxB,CAAN;;;AAAf,2BAAKC,O;AAGL,2BAAKpC,MAAL,CAAYqC,UAAZ,CAAuBjB,OAAvB,EAAgCN,IAAhC,CAAqC,UAACwB,SAAD,EAAe;AACnD;AACA;AACD,4BAAMC,WAAW,GAAG,4BAA4BD,SAAhD;AACE,8BAAI,CAACnC,MAAL,CAAYO,KAAZ,GAAoB6B,WAApB;AACD,uBALD;;;;;;;;;AAMD;AApEwB;AAAA;AAAA,mCAqEVC,IArEU,EAqEI;;;;;;;;AAC3B,2BAAKtC,SAAL,GAAiB,IAAjB;AACAS,6BAAO,CAACC,GAAR,CAAY,KAAKT,MAAjB,EAAyB,QAAzB;;2BAEIqC,IAAI,CAACC,K;;;;;;AACQ,6BAAM,KAAK9C,WAAL,CAAiBuC,MAAjB,CAAwB;AAC3CC,+BAAO,EAAE;AADkC,uBAAxB,CAAN;;;AAAf,2BAAKC,O;AAGL,2BAAKA,OAAL,CAAaM,OAAb;AACA,2BAAKlD,IAAL,CAAUmD,IAAV,CAAe,6EAAiB,gBAAhC,EAAkD,KAAKxC,MAAvD,EACE;AACA;AACA;AACA;AAJF,uBAKGyC,SALH,CAKa,UAAAC,KAAK,EAAI;AAClB,4BAAI9B,GAAG,GAAS,EAAhB;AACAA,2BAAG,GAAG8B,KAAN;;AACA,4BAAG9B,GAAG,CAAC+B,IAAJ,IAAU,CAAb,EAAe;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAI,CAAClD,MAAL,CAAYmD,UAAZ,CAAuB,QAAvB,EAAiC,EAAjC,EAAqChC,GAAG,CAACiC,GAAzC,EAA8ClC,IAA9C,CAAoD,UAAAC,GAAG,EAAI;AACzD,kCAAI,CAACtB,MAAL,CAAYuB,aAAZ,CAA0B,gBAA1B;AACD,2BAFD;AAGD,yBAbD,MAaK;AACH,gCAAI,CAACpB,MAAL,CAAYmD,UAAZ,CAAuB,OAAvB,EAAgC,EAAhC,EAAoChC,GAAG,CAACiC,GAAxC;AACD;;AACD,8BAAI,CAACZ,OAAL,CAAaa,OAAb;AACD,uBAzBH;;;;;;;;;AA2BH;AAzGwB;;AAAA;AAAA,S;;;;gBAVlB;;gBARA;;gBACA;;gBAE0B;;gBAC1B;;gBAHA;;gBADQ;;gBAGqC;;gBAE7C;;;;AAaI1D,oBAAc,6DAL1B,gEAAU;AACT2D,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAK0B,GAAd5D,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDClBb;;;UAUa6D,QAAQ;AAQnB,0BACSC,OADT,EAEU7D,IAFV,EAGU8D,QAHV,EAIU7D,MAJV,EAIwB;AAAA;;AAAA;;AAHf,eAAA4D,OAAA,GAAAA,OAAA;AACC,eAAA7D,IAAA,GAAAA,IAAA;AACA,eAAA8D,QAAA,GAAAA,QAAA;AACA,eAAA7D,MAAA,GAAAA,MAAA;AAXV,eAAA8D,UAAA,GAAuB,EAAvB;AACA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAC,aAAA,GAAgB,aAAhB;AACA,eAAAC,iBAAA,GAAoB,iBAApB;AAEA,eAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAoB,KAApB,CAAZ;AAQE,eAAKL,QAAL,CAAcM,KAAd,GAAsB9C,IAAtB,CAA2B,YAAM;AAC/B,kBAAI,CAAC+C,UAAL;AACD,WAFD;AAID;;AAlBkB;AAAA;AAAA,4CAmBD;AAChBlD,mBAAO,CAACC,GAAR,CAAY,KAAK+C,SAAL,CAAeG,KAA3B,EAAkC,OAAlC;AACA,mBAAO,KAAKH,SAAL,CAAeG,KAAtB,CAFgB,CAGhB;AACA;AACA;AACA;AACA;AACD;AA3BkB;AAAA;AAAA,sCA4BPC,WA5BO,EA4BY;AAC7B,mBAAQ,KAAKR,UAAL,CAAgBS,OAAhB,CAAwBD,WAAxB,IAAuC,CAAC,CAAhD;AACD;AA9BkB;AAAA;AAAA,sCAgCPA,WAhCO,EAgCY;AAC7B,iBAAKR,UAAL,CAAgBU,IAAhB,CAAqBF,WAArB;AACD;AAlCkB;AAAA;AAAA,yCAoCJA,WApCI,EAoCe;AAChC,gBAAMG,KAAK,GAAG,KAAKX,UAAL,CAAgBS,OAAhB,CAAwBD,WAAxB,CAAd;;AACA,gBAAIG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,mBAAKX,UAAL,CAAgBY,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACD;AACF;AAzCkB;AAAA;AAAA,gCA2CbE,QA3Ca,EA2CA;AAAA;;AACjBzD,mBAAO,CAACC,GAAR,CAAYwD,QAAZ,EAAsB,UAAtB;AACA,mBAAO,KAAKf,OAAL,CAAagB,GAAb,CAAiB,KAAKZ,aAAtB,EAAqC,IAArC,EAA2C3C,IAA3C,CAAgD,YAAM;AAC3D,oBAAI,CAACwD,WAAL,CAAiBF,QAAjB,EAD2D,CAE3D;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,qBAAOG,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgB,YAAhB,CAArB,CAAP;AACD,aAlBM,CAAP;AAmBD;AAhEkB;AAAA;AAAA,iCAkEZL,QAlEY,EAkEI;AAAA;;AACrB,mBAAO,KAAKf,OAAL,CAAagB,GAAb,CAAiB,KAAKZ,aAAtB,EAAqC,IAArC,EAA2C3C,IAA3C,CAAgD,YAAM;AAC3D,oBAAI,CAACwD,WAAL,CAAiBF,QAAjB;;AACA,qBAAOG,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgB,aAAhB,CAArB,CAAP;AACD,aAHM,CAAP;AAID;AAvEkB;AAAA;AAAA,mCAyEb;AAAA;;AACJ,mBAAO,KAAKpB,OAAL,CAAaqB,MAAb,CAAoB,KAAKjB,aAAzB,EAAwC3C,IAAxC,CAA6C,YAAM;AACxD,oBAAI,CAAC6C,SAAL,CAAegB,IAAf,CAAoB,KAApB;;AACA,qBAAO,MAAI,CAACtB,OAAL,CAAaqB,MAAb,CAAoB,UAApB,CAAP;AACD,aAHM,EAGJ5D,IAHI,CAGC,YAAM;AACZyD,oBAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgB,aAAhB,CAArB;AACD,aALM,CAAP;AAMD;AAhFkB;AAAA;AAAA,sCAkFPL,QAlFO,EAkFM;AACvB,mBAAO,KAAKf,OAAL,CAAagB,GAAb,CAAiB,UAAjB,EAA6BD,QAA7B,CAAP;AACD;AApFkB;AAAA;AAAA,uCAqFNQ,QArFM,EAqFO;AACxBjE,mBAAO,CAACC,GAAR,CAAYgE,QAAZ,EAAsB,cAAtB;AACA,mBAAO,KAAKvB,OAAL,CAAagB,GAAb,CAAiB,UAAjB,EAA6BO,QAA7B,CAAP;AACD;AAxFkB;AAAA;AAAA,yCAyFP;AACV,mBAAO,KAAKvB,OAAL,CAAalC,GAAb,CAAiB,UAAjB,EAA6BL,IAA7B,CAAmC,UAAEgD,KAAF,EAAW;AACnDnD,qBAAO,CAACC,GAAR,CAAYkD,KAAZ,EAAmB,cAAnB;AACA,qBAAOA,KAAP;AACD,aAHM,CAAP;AAID;AA9FkB;AAAA;AAAA,wCA+FR;AACT,mBAAO,KAAKT,OAAL,CAAalC,GAAb,CAAiB,UAAjB,EAA6BL,IAA7B,CAAkC,UAACgD,KAAD,EAAW;AAClD,qBAAOA,KAAP;AACD,aAFM,CAAP;AAGD;AAnGkB;AAAA;AAAA,uCAqGT;AAAA;;AACR,mBAAO,KAAKT,OAAL,CAAalC,GAAb,CAAiB,KAAKsC,aAAtB,EAAqC3C,IAArC,CAA0C,UAACgD,KAAD,EAAW;AAC1D,oBAAI,CAACH,SAAL,CAAegB,IAAf,CAAoB,IAApB;;AACA,qBAAOb,KAAK,KAAK,IAAjB;AACD,aAHM,CAAP;AAID;AA1GkB;AAAA;AAAA,iDA4GC;AAClB,mBAAO,KAAKT,OAAL,CAAalC,GAAb,CAAiB,KAAKuC,iBAAtB,EAAyC5C,IAAzC,CAA8C,UAACgD,KAAD,EAAW;AAC9D,qBAAOA,KAAP;AACD,aAFM,CAAP;AAGD,WAhHkB,CAkHnB;;AAlHmB;AAAA;AAAA,4CAmHDe,aAnHC,EAmHoB;AAAA;;AACrC,mBAAO,KAAKhE,WAAL,GAAmBC,IAAnB,CAAwB,UAAAC,GAAG,EAAE;AAClC,oBAAI,CAACyC,OAAL,GAAazC,GAAb;AACA,oBAAI,CAACyC,OAAL,CAAasB,KAAb,GAAmBD,aAAnB;;AACA,oBAAI,CAACP,WAAL,CAAiB,MAAI,CAACd,OAAtB;AACD,aAJM,CAAP;AAMD;AA1HkB;AAAA;AAAA,8CA2HF;AAAA;;AACf,mBAAO,KAAK3C,WAAL,GAAmBC,IAAnB,CAAwB,UAAAC,GAAG,EAAE;AAClC,qBAAI,CAACyC,OAAL,GAAazC,GAAb;AACA,qBAAO,OAAI,CAACyC,OAAL,CAAasB,KAApB;AACD,aAHM,CAAP;AAID;AAhIkB;AAAA;AAAA,8CAkIF;AAAA;;AACf,gBAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,mBAAzB,EAA8C,EAA9C,EAECC,SAFD,CAEW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eALD;AAMD,aAPa,CAAd;AAQA,mBAAOkC,OAAP;AACD;AA5IkB;AAAA;AAAA,wCA6ILI,QA7IK,EA6IG;AAAA;;AACpB,gBAAIJ,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,eAAzB,EAA0C;AAAEwC,wBAAQ,EAAGA;AAAb,eAA1C,EACCvC,SADD,CACW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eAJD;AAKD,aANa,CAAd;AAOA,mBAAOkC,OAAP;AACD;AAtJkB;AAAA;AAAA,6CAuJAK,IAvJA,EAuJI;AAAA;;AACrB,gBAAIL,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,oBAAzB,EAA+C;AAAEyC,oBAAI,EAAGA;AAAT,eAA/C,EACCxC,SADD,CACW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eAJD;AAKD,aANa,CAAd;AAOA,mBAAOkC,OAAP;AACD;AAhKkB;AAAA;AAAA,oCAiKTM,GAjKS,EAiKN;AAAA;;AACX,gBAAIN,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,eAAzB,EAA0C;AAAE0C,mBAAG,EAAGA;AAAR,eAA1C,EACCzC,SADD,CACW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eAJD;AAKD,aANa,CAAd;AAOA,mBAAOkC,OAAP;AACD;AA1KkB;AAAA;AAAA,6CA2KAO,QA3KA,EA2KUC,SA3KV,EA2KqBC,QA3KrB,EA2K+BC,QA3K/B,EA2KyCC,WA3KzC,EA2KsDP,QA3KtD,EA2KgEC,IA3KhE,EA2KsEO,SA3KtE,EA2KiFC,UA3KjF,EA2K6FC,MA3K7F,EA2KqGjB,QA3KrG,EA2K6G;AAAA;;AAC9H,gBAAIG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,wBAAzB,EAAmD;AACjD2C,wBAAQ,EAAGA,QADsC;AAEjDC,yBAAS,EAAGA,SAFqC;AAGjDC,wBAAQ,EAAGA,QAHsC;AAIjDC,wBAAQ,EAAGA,QAJsC;AAKjDC,2BAAW,EAAGA,WALmC;AAMjDP,wBAAQ,EAAGA,QANsC;AAOjDC,oBAAI,EAAGA,IAP0C;AAQjDO,yBAAS,EAAGA,SARqC;AASjDC,0BAAU,EAAGA,UAToC;AAUjDC,sBAAM,EAAGA,MAVwC;AAWjDC,sBAAM,EAAGlB;AAXwC,eAAnD,EAaChC,SAbD,CAaW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eAhBD;AAiBD,aAlBa,CAAd;AAmBA,mBAAOkC,OAAP;AACD;AAhMkB;AAAA;AAAA,yCAiMJO,QAjMI,EAiMMC,SAjMN,EAiMiBC,QAjMjB,EAiM2BC,QAjM3B,EAiMqCC,WAjMrC,EAiMkDP,QAjMlD,EAiM4DC,IAjM5D,EAiMkEO,SAjMlE,EAiM6EC,UAjM7E,EAiMyFC,MAjMzF,EAiMiGE,MAjMjG,EAiMyGC,aAjMzG,EAiMwHC,SAjMxH,EAiMmIC,GAjMnI,EAiMwIC,EAjMxI,EAiM0I;AAAA;;AAC3J,gBAAIpB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAAC1F,IAAL,CAAUmD,IAAV,CAAe,sEAAU,gBAAzB,EAA2C;AACzC2C,wBAAQ,EAAGA,QAD8B;AAEzCC,yBAAS,EAAGA,SAF6B;AAGzCC,wBAAQ,EAAGA,QAH8B;AAIzCC,wBAAQ,EAAGA,QAJ8B;AAKzCC,2BAAW,EAAGA,WAL2B;AAMzCP,wBAAQ,EAAGA,QAN8B;AAOzCC,oBAAI,EAAGA,IAPkC;AAQzCO,yBAAS,EAAGA,SAR6B;AASzCC,0BAAU,EAAGA,UAT4B;AAUzCC,sBAAM,EAAGA,MAVgC;AAWzCE,sBAAM,EAAGA,MAXgC;AAWxBC,6BAAa,EAAGA,aAXQ;AAWOC,yBAAS,EAAGA,SAXnB;AAW8BC,mBAAG,EAAGA,GAXpC;AAWyCC,kBAAE,EAAGA;AAX9C,eAA3C,EAaCvD,SAbD,CAaW,UAAAC,KAAK,EAAI;AAClBlC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAqE,uBAAO,CAACpC,KAAD,CAAP;AACD,eAhBD;AAiBD,aAlBa,CAAd;AAmBA,mBAAOkC,OAAP;AACD;AAtNkB;;AAAA;AAAA,S;;;;gBAXZ;;gBAKA;;gBAFiB;;gBACjB;;;;AAOI3B,cAAQ,6DAHpB,iEAAW;AACVgD,kBAAU,EAAE;AADF,OAAX,CAGoB,GAARhD,QAAQ,CAAR","file":"konfirmasi-konfirmasi-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"color: #fff;\\\">\\n      <ion-back-button defaultHref=\\\"/riwayat-order\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"color: #fff;\\\">Konfirmasi</ion-title>\\n  </ion-toolbar>\\n</ion-header> \\n\\n<ion-content [fullscreen]=\\\"true\\\" style=\\\"--background: var(--ion-color-bg);\\\">\\n\\n  <div style=\\\"text-align: center;padding: 20px;background: var(--ion-color-primary);margin: 3% 3%;border-radius: 20px;\\\">\\n    <div style=\\\"margin-bottom: 20px;\\\">\\n      <h6 style=\\\"margin: 0px;\\\"><b style=\\\"color: #fff;\\\">Konfirmasi Transfer Bank</b></h6>\\n    </div>\\n    <br>\\n  <form #signupForm=\\\"ngForm\\\" novalidate>\\n    <ion-list lines=\\\"none\\\" style=\\\"border-radius: 20px;\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">ID Order</ion-label>\\n          <ion-input [(ngModel)]=\\\"signup.id_order\\\" name=\\\"id_order\\\" type=\\\"text\\\" #id_order=\\\"ngModel\\\" readonly required>\\n          </ion-input>\\n        </ion-item> \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Nama Pemilik Rekening</ion-label>\\n          <ion-input [(ngModel)]=\\\"signup.nama_pemilik\\\" name=\\\"nama_pemilik\\\" type=\\\"text\\\" #nama_pemilik=\\\"ngModel\\\" required>\\n          </ion-input>\\n        </ion-item>  \\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"nama_pemilik.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Nama Pemilik Rekening tidak boleh kosong\\n          </p>\\n        </ion-text>                       \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Dari Bank</ion-label>\\n          <ion-select [(ngModel)]=\\\"signup.dari_bank\\\" name=\\\"dari_bank\\\" type=\\\"text\\\" #dari_bank=\\\"ngModel\\\" required>\\n              <ion-select-option value=\\\"L\\\">Bank Central Asia</ion-select-option>\\n              <ion-select-option value=\\\"P\\\">Bank Lainnya</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"dari_bank.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Dari Bank tidak boleh kosong\\n          </p>\\n        </ion-text>         \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Ke Bank</ion-label>\\n          <ion-input [(ngModel)]=\\\"signup.ke_bank\\\" name=\\\"ke_bank\\\" type=\\\"text\\\" #ke_bank=\\\"ngModel\\\" readonly required>\\n          </ion-input>\\n        </ion-item>         \\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"ke_bank.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Ke Bank tidak boleh kosong\\n          </p>\\n        </ion-text>         \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Jumlah Dana</ion-label>\\n          <ion-input [(ngModel)]=\\\"signup.jumlah_dana\\\" name=\\\"jumlah_dana\\\" type=\\\"number\\\" #jumlah_dana=\\\"ngModel\\\" required>\\n          </ion-input>\\n        </ion-item>  \\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"jumlah_dana.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Jumlah Dana tidak boleh kosong\\n          </p>\\n        </ion-text>  \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Tanggal Pembayaran</ion-label>\\n          <!-- <ion-input [(ngModel)]=\\\"signup.tanggal_pembayaran\\\" name=\\\"tanggal_pembayaran\\\" type=\\\"date\\\" #tanggal_pembayaran=\\\"ngModel\\\" required>\\n          </ion-input> -->\\n          <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" placeholder=\\\"Pilih Tanggal\\\" [(ngModel)]=\\\"signup.tanggal_pembayaran\\\" name=\\\"tanggal_pembayaran\\\"\\n          #tanggal_pembayaran=\\\"ngModel\\\" required\\n          cancelText=\\\"Batal\\\" doneText=\\\"Pilih\\\"></ion-datetime>\\n        </ion-item>  \\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"tanggal_pembayaran.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Tanggal Pembayaran tidak boleh kosong\\n          </p>\\n        </ion-text>  \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Bukti Foto</ion-label>\\n          <ion-input [(ngModel)]=\\\"signup.bukti\\\" name=\\\"bukti\\\" type=\\\"hidden\\\" #bukti=\\\"ngModel\\\" required></ion-input>\\n        </ion-item> \\n\\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"tanggal_pembayaran.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Bukti Foto tidak boleh kosong\\n          </p>\\n        </ion-text>  \\n        <div style=\\\"width: 100%;text-align: center;\\\" (click)=\\\"upload_bukti()\\\">\\n          <div style=\\\"width: 80%;border:2px dashed#c4c4c4;margin:0 auto;border-radius: 20px;\\\">\\n            <img class=\\\"product-image\\\" style=\\\"height: 120px;\\\" src=\\\"{{signup.bukti}}\\\" onerror=\\\"this.src = '/assets/img/no_image.png'\\\">\\n          </div>         \\n        </div>                                  \\n    </ion-list>\\n    <!-- <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button expand=\\\"full\\\" (click)=\\\"upload_bukti()\\\" color=\\\"light\\\" style=\\\"--border-radius:20px\\\">\\n            Upload Bukti</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid> -->\\n    <div>\\n      <ion-button (click)=\\\"onSignup(signupForm)\\\" type=\\\"submit\\\" color=\\\"light\\\" expand=\\\"block\\\"\\n      style=\\\"--border-radius:20px\\\"><b style=\\\"color: var(--ion-color-primary);\\\">Submit</b></ion-button>\\n    </div>\\n  </form>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { KonfirmasiPage } from './konfirmasi.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: KonfirmasiPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class KonfirmasiPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { KonfirmasiPageRoutingModule } from './konfirmasi-routing.module';\n\nimport { KonfirmasiPage } from './konfirmasi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    KonfirmasiPageRoutingModule\n  ],\n  declarations: [KonfirmasiPage]\n})\nexport class KonfirmasiPageModule {}\n","export default \".label-floating.sc-ion-label-md-h, .label-stacked.sc-ion-label-md-h {\\n  color: #222;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAva29uZmlybWFzaS9rb25maXJtYXNpLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2tvbmZpcm1hc2kva29uZmlybWFzaS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGFiZWwtZmxvYXRpbmcuc2MtaW9uLWxhYmVsLW1kLWgsIC5sYWJlbC1zdGFja2VkLnNjLWlvbi1sYWJlbC1tZC1oe1xuICAgIGNvbG9yOiAjMjIyO1xufSJdfQ== */\";","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { UserData } from '../providers/user-data';\nimport { UserOptions } from '../interfaces/user-options';\nimport { AlertController, IonList, LoadingController, ModalController, NavController, ToastController, Config, IonCheckbox, IonSelect } from '@ionic/angular';\nimport { ConstantService } from '../providers/constant.service';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { timingSafeEqual } from 'crypto';\nimport { HttpClient } from '@angular/common/http';\nimport { API_URL_SLIDER, IMAGE_URL_PRODUCT } from '../providers/constant.service';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'konfirmasi',\n  templateUrl: './konfirmasi.page.html',\n  styleUrls: ['./konfirmasi.page.scss'],\n})\nexport class KonfirmasiPage implements OnInit {\n  data_user: any = {};\n  id_order : any;\n  submitted = false;\n  loading: any;\n  signup : any = {\n    id_order : '',\n    nama_pemilik : '',\n    dari_bank : '',\n    ke_bank : 'BANK CENTRAL ASIA',\n    jumlah_dana : '',\n    tanggal_pembayaran : '',\n    bukti : '',\n  }\n  constructor(\n    public http: HttpClient,\n    public router: Router,\n    public userData: UserData,\n    public loadingctrl: LoadingController,\n    private consta: ConstantService,\n    private userdata: UserData,\n    private route: ActivatedRoute,\n    public modalCtrl: ModalController,\n    private camera: Camera,\n  ) { }\n\n  ngOnInit() {\n  }\n  ionViewWillEnter() {\n    console.log('view wenter')\n    this.signup = {\n      id_order : '',\n      nama_pemilik : '',\n      dari_bank : '',\n      ke_bank : 'BANK CENTRAL ASIA',\n      jumlah_dana : '',\n      tanggal_pembayaran : '',\n      bukti : '',\n    }    \n    this.userdata.getUsername().then( hsl => {\n      console.log(hsl, 'hasil');\n      if(hsl==null){\n        this.router.navigateByUrl('login');\n      }else{\n        this.data_user=hsl;\n        this.id_order = this.route.snapshot.paramMap.get('id');\n        this.signup.id_order = this.id_order\n      }\n    });\n  }\n  async upload_bukti(){\n    // alert('ambil photo');\n    const options: CameraOptions = {\n      quality: 100,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      sourceType : this.camera.PictureSourceType.PHOTOLIBRARY\n    }\n    this.loading = await this.loadingctrl.create({\n      message: 'Please wait...'\n    });    \n    this.camera.getPicture(options).then((imageData) => {\n     // imageData is either a base64 encoded string or a file URI\n     // If it's base64 (DATA_URL):\n    const base64Image = 'data:image/jpeg;base64,' + imageData;\n      this.signup.bukti = base64Image;\n    });\n  }\n  async onSignup(form: NgForm) {\n    this.submitted = true;\n    console.log(this.signup, 'signup')\n\n    if (form.valid) {\n      this.loading = await this.loadingctrl.create({\n        message: 'Silahkan tunggu....'\n      });\n      this.loading.present();\n      this.http.post(API_URL_SLIDER + 'api_konfirmasi', this.signup)\n        // .pipe(map((data: any) => {\n        //   console.log(data, 'map')\n        //   return data.data;\n        // }))\n        .subscribe(hasil => {\n          let hsl : any = {};\n          hsl = hasil;\n          if(hsl.code==1){\n            // this.signup = {\n            //   id_order : '',\n            //   nama_pemilik : '',\n            //   dari_bank : '',\n            //   ke_bank : 'BANK CENTRAL ASIA',\n            //   jumlah_dana : '',\n            //   tanggal_pembayaran : '',\n            //   bukti : '',\n            // }\n            this.consta.show_alert('Sukses', '', hsl.msg).then( hsl => {\n              this.router.navigateByUrl('/riwayat-order')\n            })\n          }else{\n            this.consta.show_alert('Error', '', hsl.msg);\n          }\n          this.loading.dismiss();\n        });\n    }\n  }  \n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n// import { HTTP } from '@ionic-native/http/ngx';\nimport { BehaviorSubject } from 'rxjs';\nimport { ToastController, Platform } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { API_URL_SLIDER, IMAGE_URL_PRODUCT, API_URL, API_RAJAONKIR } from '../providers/constant.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserData {\n  _favorites: string[] = [];\n  session: any = {};\n  HAS_LOGGED_IN = 'hasLoggedIn';\n  HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\n  API_URL: 'http://localhost/customerloyalty/rest/';\n  authState = new BehaviorSubject(false);\n\n  constructor(\n    public storage: Storage,\n    private http: HttpClient,\n    private platform: Platform,\n    private router: Router\n  ) { \n    this.platform.ready().then(() => {\n      this.isLoggedIn();\n    });\n\n  }\n  isAuthenticated() {\n    console.log(this.authState.value, 'value')\n    return this.authState.value;\n    // if(this.authState.value==false){\n    //   this.router.navigate(['login']);\n    // }else{\n    //   // this.router.navigate(['checkout']);\n    // }\n  }\n  hasFavorite(sessionName: string): boolean {\n    return (this._favorites.indexOf(sessionName) > -1);\n  }\n\n  addFavorite(sessionName: string): void {\n    this._favorites.push(sessionName);\n  }\n\n  removeFavorite(sessionName: string): void {\n    const index = this._favorites.indexOf(sessionName);\n    if (index > -1) {\n      this._favorites.splice(index, 1);\n    }\n  }\n\n  login(username: any): Promise<any> {\n    console.log(username, 'USERNAME')\n    return this.storage.set(this.HAS_LOGGED_IN, true).then(() => {\n      this.setUsername(username);\n      // this.http.get(this.API_URL + 'login', {}, {})\n      // .then(data => {\n    \n      //   console.log(data.status);\n      //   console.log(data.data); // data received by server\n      //   console.log(data.headers);\n    \n      // })\n      // .catch(error => {\n    \n      //   console.log(error.status);\n      //   console.log(error.error); // error message as string\n      //   console.log(error.headers);\n    \n      // });      \n      return window.dispatchEvent(new CustomEvent('user:login'));\n    });\n  }\n\n  signup(username: string): Promise<any> {\n    return this.storage.set(this.HAS_LOGGED_IN, true).then(() => {\n      this.setUsername(username);\n      return window.dispatchEvent(new CustomEvent('user:signup'));\n    });\n  }\n\n  logout(): Promise<any> {\n    return this.storage.remove(this.HAS_LOGGED_IN).then(() => {\n      this.authState.next(false);\n      return this.storage.remove('username');\n    }).then(() => {\n      window.dispatchEvent(new CustomEvent('user:logout'));\n    });\n  }\n\n  setUsername(username: any): Promise<any> {\n    return this.storage.set('username', username);\n  }\n  set_referral(referral: any): Promise<any> {\n    console.log(referral, 'REFERRAL SET')\n    return this.storage.set('referral', referral);\n  }\n  get_referral(): Promise<any> {\n    return this.storage.get('referral').then( ( value )=>{\n      console.log(value, 'REFERRAL SET')\n      return value;\n    });\n  }\n  getUsername(): Promise<string> {\n    return this.storage.get('username').then((value) => {\n      return value;\n    });\n  }\n\n  isLoggedIn(): Promise<boolean> {\n    return this.storage.get(this.HAS_LOGGED_IN).then((value) => {\n      this.authState.next(true);\n      return value === true;\n    });\n  }\n\n  checkHasSeenTutorial(): Promise<string> {\n    return this.storage.get(this.HAS_SEEN_TUTORIAL).then((value) => {\n      return value;\n    });\n  }\n\n  // CUSTOMER LOYALTY\n  set_photo_profile(photo_profile: string): Promise<any> {\n    return this.getUsername().then(hsl=>{\n      this.session=hsl;\n      this.session.photo=photo_profile;\n      this.setUsername(this.session);\n    })\n    \n  }\n  get_photo_profile(): Promise<any> {\n    return this.getUsername().then(hsl=>{\n      this.session=hsl;\n      return this.session.photo;\n    });\n  }\n\n  get_data_provinsi(){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_data_provinsi', {\n      })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }\n  get_data_kota(provinsi){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_data_kota', { provinsi : provinsi })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }  \n  get_data_kecamatan(kota){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_data_kecamatan', { kota : kota })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }\n  short_url(url){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_short_url', { url : url })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }\n  submit_pendaftaran(nama_pel, email_pel, pass_pel, kon_pass, no_telp_pel, provinsi, kota, kecamatan, alamat_pel, jk_pel, referral){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_submit_pendaftaran', { \n        nama_pel : nama_pel,\n        email_pel : email_pel,\n        pass_pel : pass_pel,\n        kon_pass : kon_pass,\n        no_telp_pel : no_telp_pel,\n        provinsi : provinsi,\n        kota : kota,\n        kecamatan : kecamatan,\n        alamat_pel : alamat_pel,\n        jk_pel : jk_pel,\n        id_ref : referral\n       })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }\n  update_profile(nama_pel, email_pel, pass_pel, kon_pass, no_telp_pel, provinsi, kota, kecamatan, alamat_pel, jk_pel, id_pel, info_lain_pel, nama_bank, rek, an){\n    var promise = new Promise((resolve, reject) => {\n      this.http.post(API_URL + 'api_update_pel', { \n        nama_pel : nama_pel,\n        email_pel : email_pel,\n        pass_pel : pass_pel,\n        kon_pass : kon_pass,\n        no_telp_pel : no_telp_pel,\n        provinsi : provinsi,\n        kota : kota,\n        kecamatan : kecamatan,\n        alamat_pel : alamat_pel,\n        jk_pel : jk_pel,\n        id_pel : id_pel, info_lain_pel : info_lain_pel, nama_bank : nama_bank, rek : rek, an : an\n       })\n      .subscribe(hasil => {\n        console.log('hasil', 'hasil')\n        resolve(hasil);\n      });      \n    });\n    return promise;\n  }  \n}\n"]}