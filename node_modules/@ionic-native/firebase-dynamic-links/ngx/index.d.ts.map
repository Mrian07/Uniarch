{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport interface IDynamicLink {\n    matchType: 'Weak' | 'Strong';\n    deepLink: string;\n}\nexport interface ILinkOptions {\n    domainUriPrefix?: string;\n    link?: string;\n    androidInfo?: {\n        androidPackageName?: string;\n        androidFallbackLink?: string;\n        androidMinPackageVersionCode?: number;\n    };\n    iosInfo?: {\n        iosBundleId?: string;\n        iosFallbackLink?: string;\n        iosIpadFallbackLink?: string;\n        iosIpadBundleId?: string;\n        iosAppStoreId?: string;\n    };\n    navigationInfo?: {\n        enableForcedRedirect?: boolean;\n    };\n    analyticsInfo?: {\n        googlePlayAnalytics?: {\n            utmSource?: string;\n            utmMedium?: string;\n            utmCampaign?: string;\n            utmTerm?: string;\n            utmContent?: string;\n        };\n        itunesConnectAnalytics?: {\n            at?: string;\n            ct?: string;\n            pt?: string;\n        };\n    };\n    socialMetaTagInfo?: {\n        socialTitle?: string;\n        socialDescription?: string;\n        socialImageLink?: string;\n    };\n}\n/**\n * @beta\n * @name Firebase Dynamic Links\n * @description\n * Cordova plugin for Firebase Dynamic Links\n *\n * Variables APP_DOMAIN and APP_PATH specify web URL where your app will start an activity to handle the link. They also used to setup support for App Indexing.\n * Go to firebase console and export google-services.json and GoogleService-Info.plist. Put those files into the root of your cordova app folder.\n *\n * Preferences:\n *\n * Preferences GoogleIOSClientId and GoogleAndroidClientId are used to setup dynamic links when you have an app for several platforms.\n * You can find values at your GoogleService-Info.plist (key ANDROID_CLIENT_ID) and google-services.json (key client[0].oauth_client[0].client_id).\n *\n * config.xml:\n * ```xml\n * <platform name=\"ios\">\n *     <preference name=\"GoogleIOSClientId\" value=\"...\" />\n * </platform>\n * <platform name=\"android\">\n *     <preference name=\"GoogleAndroidClientId\" value=\"...\" />\n * </platform>\n * ```\n * @usage\n * ```typescript\n * import { FirebaseDynamicLinks } from '@ionic-native/firebase-dynamic-links/ngx';\n *\n *\n * constructor(private firebaseDynamicLinks: FirebaseDynamicLinks) { }\n *\n * ...\n * // Handle the logic here after opening the app with the Dynamic link\n * this.firebaseDynamicLinks.onDynamicLink()\n *   .subscribe((res: any) => console.log(res), (error:any) => console.log(error));\n * ```\n *\n * @interfaces\n * DynamicLinksOptions\n */\nexport declare class FirebaseDynamicLinks extends IonicNativePlugin {\n    /**\n     * Determines if the app has a pending dynamic link and provides access to the dynamic link parameters.\n     * @return {Promise<IDynamicLink>} Returns a promise\n     */\n    getDynamicLink(): Promise<IDynamicLink>;\n    /**\n     * Registers callback that is triggered on each dynamic link click.\n     * @return {Observable<IDynamicLink>} Returns an observable\n     */\n    onDynamicLink(): Observable<IDynamicLink>;\n    /**\n     * Creates a Dynamic Link from the parameters. Returns a promise fulfilled with the new dynamic link url.\n     * @param {ILinkOptions} opt [Dynamic Link Parameters](https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks#dynamic-link-parameters)\n     * @return {Promise<string>} Returns a promise with the url\n     */\n    createDynamicLink(opts: ILinkOptions): Promise<string>;\n    /**\n     * Creates a shortened Dynamic Link from the parameters. Shorten the path to a string that is only as long as needed to be unique, with a minimum length of 4 characters. Use this method if sensitive information would not be exposed if a short Dynamic Link URL were guessed.\n     * @param {ILinkOptions} opt [Dynamic Link Parameters](https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks#dynamic-link-parameters)\n     * @return {Promise<string>} Returns a promise with the url\n     */\n    createShortDynamicLink(opts: ILinkOptions): Promise<string>;\n    /**\n     * Creates a Dynamic Link from the parameters. Shorten the path to an unguessable string. Such strings are created by base62-encoding randomly generated 96-bit numbers, and consist of 17 alphanumeric characters. Use unguessable strings to prevent your Dynamic Links from being crawled, which can potentially expose sensitive information.\n     * @param {ILinkOptions} opt [Dynamic Link Parameters](https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks#dynamic-link-parameters)\n     * @return {Promise<string>} Returns a promise with the url\n     */\n    createUnguessableDynamicLink(opts: ILinkOptions): Promise<string>;\n}\n"]}